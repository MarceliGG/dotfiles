# OPTIONS
# enable line numbers
add-highlighter global/ number-lines
# wrapping lines
add-highlighter global/ wrap

# STYLING
# set colorscheme
colorscheme palenight

# style some stuff
#set-face global Default default
declare-option str cursorPrimary rgb:008800
declare-option str cursorPrimaryEnd rgb:00aa77
declare-option str cursorPrimaryText rgb:89ddff
declare-option str cursorPrimaryInsert rgb:aa0077
declare-option str cursorPrimaryInsertEnd rgb:880000

set-face global PrimaryCursor "%opt{cursorPrimaryText},%opt{cursorPrimary}"
set-face global PrimaryCursorEol "default,%opt{cursorPrimaryEnd}"
set-face global LineNumberCursor rgb:884444,default
set-face global MenuBackground default,rgb:393d4e

hook global ModeChange (push|pop):insert:.* %{
  set-face global PrimaryCursor "%opt{cursorPrimaryText},%opt{cursorPrimary}"
  set-face global PrimaryCursorEol "default,%opt{cursorPrimaryEnd}"
}

hook global ModeChange (push|pop):.*:insert %{
  set-face global PrimaryCursor "%opt{cursorPrimaryText},%opt{cursorPrimaryInsert}" 
  set-face global PrimaryCursorEol "default,%opt{cursorPrimaryInsertEnd}"
}

# KEYBINDS
# comments
map global user / :comment-line<ret> -docstring "comment line"
map global user ? :comment-block<ret> -docstring "comment block"
# 
map global user q :q<ret> -docstring "quit"
map global user ^ ":buffer *debug*<ret>" -docstring "open debug buffer"
map global user * ":edit ~/.config/kak/kakrc<ret>" -docstring "edit config"
# saving
map global normal <c-s> :w<ret>:echo<space>Saved<ret>
map global insert <c-s> '<a-;>:w<ret><a-;>:echo<space>Saved<ret>'
# make tab insert two spaces
map global insert <tab> '  '

# LSP

define-command do-format-buffer %{
  evaluate-commands %sh{
    case "${kak_opt_filetype}" in
      python) printf "execute-keys \"<percent>|autopep8 -\"<ret>l";;
      *) printf "lsp-formatting";;
    esac
  }
}

eval %sh{kak-lsp --kakoune --session $kak_session}
hook global WinSetOption filetype=(python|c|cpp) %{
  lsp-enable-window

  # show errors in code
  lsp-inlay-diagnostics-enable global

  # keybinds for lsp
  map global user <space> :lsp-hover<ret> -docstring "LSP hover info"
  map global user r :lsp-rename<space> -docstring "rename thing"
  map global user f :do-format-buffer<space> -docstring "format buffer"
}
